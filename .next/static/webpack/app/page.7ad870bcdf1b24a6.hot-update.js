"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useWebSocket.ts":
/*!***********************************!*\
  !*** ./src/hooks/useWebSocket.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWebSocket: function() { return /* binding */ useWebSocket; }\n/* harmony export */ });\n/* harmony import */ var _data_tradingPairs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data/tradingPairs */ \"(app-pages-browser)/./src/data/tradingPairs.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ useWebSocket auto */ \n\nconst useWebSocket = ()=>{\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const ws = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Задание интервала для пинга\n    const pingInterval = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Задание таймаута для понга\n    const pingTimeout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Подключение к серверу\n        const connect = ()=>{\n            ws.current = new WebSocket(\"wss://stream.binance.com:443/stream?streams\");\n            ws.current.onopen = handleOpen;\n            ws.current.onmessage = handleMessage;\n            ws.current.onclose = handleClose;\n            ws.current.onerror = handleError;\n        };\n        // Открытие сервера\n        const handleOpen = ()=>{\n            var _ws_current;\n            console.log(\"WebSocket connection opened\");\n            setIsConnected(true);\n            try {\n                var _ws_current1;\n                if (((_ws_current1 = ws.current) === null || _ws_current1 === void 0 ? void 0 : _ws_current1.readyState) === WebSocket.OPEN) {\n                    ws.current.send(JSON.stringify({\n                        method: \"SUBSCRIBE\",\n                        params: _data_tradingPairs__WEBPACK_IMPORTED_MODULE_0__.tradingPairs.map((pair)=>\"\".concat(pair.toLowerCase(), \"@ticker\")),\n                        id: 1\n                    }));\n                }\n            } catch (error) {\n                console.error(\"Ошибка при отправке подписки:\", error);\n            }\n            console.log(\"Проверка состояния сервера\", (_ws_current = ws.current) === null || _ws_current === void 0 ? void 0 : _ws_current.readyState);\n            startPing();\n        };\n        // Получение данных и понга с сервера\n        const handleMessage = (event)=>{\n            try {\n                const recievedData = JSON.parse(event.data);\n                if (recievedData.result !== undefined) {\n                    console.log(\"Получен pong\");\n                    // Очищаем таймер ожидания понга, если он не очищен\n                    if (pingTimeout.current) {\n                        clearTimeout(pingTimeout.current);\n                    }\n                }\n                setData(recievedData.data);\n            } catch (error) {\n                console.log(\"Ошибка в Message: \", error);\n            }\n        };\n        // Закрытие сервера\n        const handleClose = ()=>{\n            console.log(\"WebSocket connection closed\");\n            setIsConnected(false);\n            cleanup();\n            recconet();\n        };\n        // Вывод ошибки Вебсокета\n        const handleError = (event)=>{\n            console.log(\"WebSocket error\", event);\n            handleClose();\n        };\n        const heartbeat = ()=>{\n            if (pingTimeout.current) {\n                clearTimeout(pingTimeout.current);\n            }\n            pingTimeout.current = setTimeout(()=>{\n                var _ws_current;\n                console.log(\"Pong не получен\");\n                if (((_ws_current = ws.current) === null || _ws_current === void 0 ? void 0 : _ws_current.readyState) === WebSocket.OPEN) {\n                    ws.current.close();\n                }\n            }, 5000);\n        };\n        // Запуск пинга для поддержания сервера\n        const startPing = ()=>{\n            console.log(\"Ping started\");\n            pingInterval.current = setInterval(()=>{\n                var _ws_current;\n                if (((_ws_current = ws.current) === null || _ws_current === void 0 ? void 0 : _ws_current.readyState) === WebSocket.OPEN) {\n                    console.log(\"Отправка ping\");\n                    ws.current.send(JSON.stringify({\n                        method: \"LIST_SUBSCRIPTIONS\",\n                        id: Date.now()\n                    }));\n                    heartbeat();\n                }\n            }, 30000);\n        };\n        // Отчистка интервала для пинга\n        const cleanup = ()=>{\n            clearInterval(pingInterval.current);\n        };\n        // Переподключение к серверу\n        const recconet = ()=>{\n            setTimeout(connect, 5000);\n        };\n        // Запуск сервера\n        connect();\n        // Очищаем\n        return ()=>{\n            var _ws_current;\n            cleanup();\n            (_ws_current = ws.current) === null || _ws_current === void 0 ? void 0 : _ws_current.close();\n        };\n    }, []);\n    return {\n        data,\n        isConnected\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useWebSocket.ts\n"));

/***/ })

});